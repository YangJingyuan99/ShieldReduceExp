showtext_auto()
Linux = c(0.146,	0.085,	0.052,	0.020,	0.003)
Web = c(0.042,	0.027,	0.018,	0.008,	0.0003)
Docker = c(0.043,	0.040,	0.028,	0.015,	0.007)
SimOS = c(0.002,	0.002,	0.002,	0.002,	0.001)
#x轴数据
xline <- numeric(5)
for (i in 1:5){
xline[i] = i
}
# 设置字体
windowsFonts(Arial=windowsFont("Arial"))
#绘图
ggplot() +
# 坐标轴显示范围
coord_cartesian(xlim =c(1, 5), ylim = c(0, 0.15)) +
# 折线和散点
geom_line(aes(x=xline,y=Docker,color="Docker"), size=3) +
geom_point(aes(x=xline,y=Docker), color = "#F2BE5C",
size = 10, shape = 21, stroke=4.5) +
geom_line(aes(x=xline,y=Web,color="Web"), size=3) +
geom_point(aes(x=xline,y=Web), color = "#B79AD1",
size = 10, shape = 25, stroke=4.5) +
geom_line(aes(x=xline,y=SimOS,color="SimOS"), size=3) +
geom_point(aes(x=xline,y=SimOS), color = "#75B8BF",
size = 10, shape = 24, stroke=4.5) +
geom_line(aes(x=xline,y=Linux,color="Linux"), size=3) +
geom_point(aes(x=xline,y=Linux), color = "#AD0626",
size = 10, shape = 23, stroke=4.5) +
# 白底，没有上边框和右边框
theme_classic() +
# 设置坐标轴上字体大小
theme(axis.text = element_text(size = 40, color = "black")) +
# 设置字体样式
theme(text = element_text(family = "Arial")) +
# 设置label字体大小
theme(axis.title.x = element_text(size = 45)) +
theme(axis.title.y = element_text(size = 38)) +
# 设置label内容
labs(y = "Index Overhead (%)", x = NULL) +
# ylabel位置
theme(axis.title.y = element_text(hjust = 1)) +
# 设置刻度内容及位置
scale_x_continuous(breaks = c(1, 2, 3, 4, 5),
labels = c("α=0", "α=0.5", "α=0.7", "α=0.9", "α=1")) +
scale_y_continuous(breaks = c(0, 0.05, 0.1, 0.15),
labels = c(0, 0.05, 0.1, 0.15)) +
# 图例
scale_color_manual(name=NULL,
values=c("Linux" = "#AD0626",
"Web" = "#B79AD1",
"Docker" = "#F2BE5C",
"SimOS" = "#75B8BF"),
limits=c("Linux",
"Web",
"Docker",
"SimOS")) +
# 图例位置
theme(legend.position = c(0.75, 0.75)) +
# 图例背景设置为空
theme(legend.background = element_rect(fill = "transparent")) +
# 图例大小
theme(legend.text = element_text(size = 42)) +
# 图例每行元素个数
guides(color=guide_legend(ncol = 1, #根据ncol或者nrow设置图例显示行数或列数（设置一个即可）
byrow = T))#默认F，表示升序填充，反之则降序
# 保存文件
ggsave(paste(exportPath, exportName, sep=""), plot = last_plot(), width = 8, height = 5)
rm(list = ls())
exp = "exp3"
exportPath = "C:/Users/YangJingyuan/Desktop/"
exportName = "exp7-alpha.pdf"
root = "D:/RProject/tmp"
setwd(sprintf("%s/%s", root, exp))
library(ggplot2)
library(readxl)
library(extrafont)
library(showtext)
font_add('Arial','C:/Windows/Fonts/arial.ttf')
showtext_auto()
Linux = c(0.146,	0.085,	0.052,	0.020,	0.003)
Web = c(0.042,	0.027,	0.018,	0.008,	0.0003)
Docker = c(0.043,	0.040,	0.028,	0.015,	0.007)
SimOS = c(0.002,	0.002,	0.002,	0.002,	0.001)
#x轴数据
xline <- numeric(5)
for (i in 1:5){
xline[i] = i
}
# 设置字体
windowsFonts(Arial=windowsFont("Arial"))
#绘图
ggplot() +
# 坐标轴显示范围
coord_cartesian(xlim =c(1, 5), ylim = c(0, 0.15)) +
# 折线和散点
geom_line(aes(x=xline,y=Docker,color="Docker"), size=3) +
geom_point(aes(x=xline,y=Docker), color = "#F2BE5C",
size = 10, shape = 21, stroke=4.5) +
geom_line(aes(x=xline,y=Web,color="Web"), size=3) +
geom_point(aes(x=xline,y=Web), color = "#B79AD1",
size = 10, shape = 25, stroke=4.5) +
geom_line(aes(x=xline,y=SimOS,color="SimOS"), size=3) +
geom_point(aes(x=xline,y=SimOS), color = "#75B8BF",
size = 10, shape = 24, stroke=4.5) +
geom_line(aes(x=xline,y=Linux,color="Linux"), size=3) +
geom_point(aes(x=xline,y=Linux), color = "#AD0626",
size = 10, shape = 23, stroke=4.5) +
# 白底，没有上边框和右边框
theme_classic() +
# 设置坐标轴上字体大小
theme(axis.text = element_text(size = 39, color = "black")) +
# 设置字体样式
theme(text = element_text(family = "Arial")) +
# 设置label字体大小
theme(axis.title.x = element_text(size = 45)) +
theme(axis.title.y = element_text(size = 38)) +
# 设置label内容
labs(y = "Index Overhead (%)", x = NULL) +
# ylabel位置
theme(axis.title.y = element_text(hjust = 1)) +
# 设置刻度内容及位置
scale_x_continuous(breaks = c(1, 2, 3, 4, 5),
labels = c("α=0", "α=0.5", "α=0.7", "α=0.9", "α=1")) +
scale_y_continuous(breaks = c(0, 0.05, 0.1, 0.15),
labels = c(0, 0.05, 0.1, 0.15)) +
# 图例
scale_color_manual(name=NULL,
values=c("Linux" = "#AD0626",
"Web" = "#B79AD1",
"Docker" = "#F2BE5C",
"SimOS" = "#75B8BF"),
limits=c("Linux",
"Web",
"Docker",
"SimOS")) +
# 图例位置
theme(legend.position = c(0.75, 0.75)) +
# 图例背景设置为空
theme(legend.background = element_rect(fill = "transparent")) +
# 图例大小
theme(legend.text = element_text(size = 42)) +
# 图例每行元素个数
guides(color=guide_legend(ncol = 1, #根据ncol或者nrow设置图例显示行数或列数（设置一个即可）
byrow = T))#默认F，表示升序填充，反之则降序
# 保存文件
ggsave(paste(exportPath, exportName, sep=""), plot = last_plot(), width = 8, height = 5)
rm(list = ls())
exp = "exp3"
exportPath = "C:/Users/YangJingyuan/Desktop/"
exportName = "exp7-alpha.pdf"
root = "D:/RProject/tmp"
setwd(sprintf("%s/%s", root, exp))
library(ggplot2)
library(readxl)
library(extrafont)
library(showtext)
font_add('Arial','C:/Windows/Fonts/arial.ttf')
showtext_auto()
Linux = c(0.146,	0.085,	0.052,	0.020,	0.003)
Web = c(0.042,	0.027,	0.018,	0.008,	0.0003)
Docker = c(0.043,	0.040,	0.028,	0.015,	0.007)
SimOS = c(0.002,	0.002,	0.002,	0.002,	0.001)
#x轴数据
xline <- numeric(5)
for (i in 1:5){
xline[i] = i
}
# 设置字体
windowsFonts(Arial=windowsFont("Arial"))
#绘图
ggplot() +
# 坐标轴显示范围
coord_cartesian(xlim =c(1, 5), ylim = c(0, 0.15)) +
# 折线和散点
geom_line(aes(x=xline,y=Docker,color="Docker"), size=3) +
geom_point(aes(x=xline,y=Docker), color = "#F2BE5C",
size = 10, shape = 21, stroke=4.5) +
geom_line(aes(x=xline,y=Web,color="Web"), size=3) +
geom_point(aes(x=xline,y=Web), color = "#B79AD1",
size = 10, shape = 25, stroke=4.5) +
geom_line(aes(x=xline,y=SimOS,color="SimOS"), size=3) +
geom_point(aes(x=xline,y=SimOS), color = "#75B8BF",
size = 10, shape = 24, stroke=4.5) +
geom_line(aes(x=xline,y=Linux,color="Linux"), size=3) +
geom_point(aes(x=xline,y=Linux), color = "#AD0626",
size = 10, shape = 23, stroke=4.5) +
# 白底，没有上边框和右边框
theme_classic() +
# 设置坐标轴上字体大小
theme(axis.text = element_text(size = 37, color = "black")) +
# 设置字体样式
theme(text = element_text(family = "Arial")) +
# 设置label字体大小
theme(axis.title.x = element_text(size = 45)) +
theme(axis.title.y = element_text(size = 38)) +
# 设置label内容
labs(y = "Index Overhead (%)", x = NULL) +
# ylabel位置
theme(axis.title.y = element_text(hjust = 1)) +
# 设置刻度内容及位置
scale_x_continuous(breaks = c(1, 2, 3, 4, 5),
labels = c("α=0", "α=0.5", "α=0.7", "α=0.9", "α=1")) +
scale_y_continuous(breaks = c(0, 0.05, 0.1, 0.15),
labels = c(0, 0.05, 0.1, 0.15)) +
# 图例
scale_color_manual(name=NULL,
values=c("Linux" = "#AD0626",
"Web" = "#B79AD1",
"Docker" = "#F2BE5C",
"SimOS" = "#75B8BF"),
limits=c("Linux",
"Web",
"Docker",
"SimOS")) +
# 图例位置
theme(legend.position = c(0.75, 0.75)) +
# 图例背景设置为空
theme(legend.background = element_rect(fill = "transparent")) +
# 图例大小
theme(legend.text = element_text(size = 42)) +
# 图例每行元素个数
guides(color=guide_legend(ncol = 1, #根据ncol或者nrow设置图例显示行数或列数（设置一个即可）
byrow = T))#默认F，表示升序填充，反之则降序
# 保存文件
ggsave(paste(exportPath, exportName, sep=""), plot = last_plot(), width = 8, height = 5)
rm(list = ls())
exp = "exp3"
exportPath = "C:/Users/YangJingyuan/Desktop/"
exportName = "exp7-alpha.pdf"
root = "D:/RProject/tmp"
setwd(sprintf("%s/%s", root, exp))
library(ggplot2)
library(readxl)
library(extrafont)
library(showtext)
font_add('Arial','C:/Windows/Fonts/arial.ttf')
showtext_auto()
Linux = c(0.146,	0.085,	0.052,	0.020,	0.003)
Web = c(0.042,	0.027,	0.018,	0.008,	0.0003)
Docker = c(0.043,	0.040,	0.028,	0.015,	0.007)
SimOS = c(0.002,	0.002,	0.002,	0.002,	0.001)
#x轴数据
xline <- numeric(5)
for (i in 1:5){
xline[i] = i
}
# 设置字体
windowsFonts(Arial=windowsFont("Arial"))
#绘图
ggplot() +
# 坐标轴显示范围
coord_cartesian(xlim =c(1, 5), ylim = c(0, 0.15)) +
# 折线和散点
geom_line(aes(x=xline,y=Docker,color="Docker"), size=3) +
geom_point(aes(x=xline,y=Docker), color = "#F2BE5C",
size = 10, shape = 21, stroke=4.5) +
geom_line(aes(x=xline,y=Web,color="Web"), size=3) +
geom_point(aes(x=xline,y=Web), color = "#B79AD1",
size = 10, shape = 25, stroke=4.5) +
geom_line(aes(x=xline,y=SimOS,color="SimOS"), size=3) +
geom_point(aes(x=xline,y=SimOS), color = "#75B8BF",
size = 10, shape = 24, stroke=4.5) +
geom_line(aes(x=xline,y=Linux,color="Linux"), size=3) +
geom_point(aes(x=xline,y=Linux), color = "#AD0626",
size = 10, shape = 23, stroke=4.5) +
# 白底，没有上边框和右边框
theme_classic() +
# 设置坐标轴上字体大小
theme(axis.text = element_text(size = 37, color = "black")) +
# 设置字体样式
theme(text = element_text(family = "Arial")) +
# 设置label字体大小
theme(axis.title.x = element_text(size = 45)) +
theme(axis.title.y = element_text(size = 38)) +
# 设置label内容
labs(y = "Index Overhead (%)", x = NULL) +
# ylabel位置
theme(axis.title.y = element_text(hjust = 1)) +
# 设置刻度内容及位置
scale_x_continuous(breaks = c(1, 2, 3, 4, 5),
labels = c("α=0", "α=0.5", "α=0.7", "α=0.9", "α=1")) +
scale_y_continuous(breaks = c(0, 0.05, 0.1, 0.15),
labels = c(0, 0.05, 0.1, 0.15)) +
# 图例
scale_color_manual(name=NULL,
values=c("Linux" = "#AD0626",
"Web" = "#B79AD1",
"Docker" = "#F2BE5C",
"SimOS" = "#75B8BF"),
limits=c("Linux",
"Web",
"Docker",
"SimOS")) +
# 图例位置
theme(legend.position = c(0.75, 0.75)) +
# 图例背景设置为空
theme(legend.background = element_rect(fill = "transparent")) +
# 图例大小
theme(legend.text = element_text(size = 37)) +
# 图例每行元素个数
guides(color=guide_legend(ncol = 1, #根据ncol或者nrow设置图例显示行数或列数（设置一个即可）
byrow = T))#默认F，表示升序填充，反之则降序
# 保存文件
ggsave(paste(exportPath, exportName, sep=""), plot = last_plot(), width = 8, height = 5)
rm(list = ls())
exp = "exp7"
exportPath = "C:/Users/YangJingyuan/Desktop/"
exportName = "exp7.pdf"
root = "D:/RProject/tmp"
setwd(sprintf("%s/%s", root, exp))
library(ggplot2)
library(readxl)
library(extrafont)
library(showtext)
font_add('Arial','C:/Windows/Fonts/arial.ttf')
showtext_auto()
FingerprintIndex = c(0.39, 0.11, 0.2, 0.009)
FeatureIndex = c(0.14, 0.02, 0.24, 0.02)
DeltaIndex = c(0.14, 0.03, 0.04, 0.001)
# 禁止科学计数法
options(scipen = 999)
barWidth = 0.4
x2_offset = c(0, 1.4, 2.8, 4.2)
x1_offset = numeric(4)
x3_offset = numeric(4)
for(i in 1:4) {
x1_offset[i] = x2_offset[i] - 1 * barWidth
x3_offset[i] = x2_offset[i] + 1 * barWidth
}
# 设置字体
windowsFonts(Arial=windowsFont("Arial"))
#绘图
ggplot() +
# 坐标轴显示范围
coord_cartesian(xlim =c(-0.5, 5), ylim = c(0.03, 0.62)) +
# 柱状图
geom_col(aes(x = x1_offset,y = FingerprintIndex, fill = "FingerprintIndex"), width = 0.4,
color = "black", size = 0.5) +
geom_col(aes(x = x2_offset,y = FeatureIndex, fill = "FeatureIndex"), width = 0.4,
color = "black", size = 0.5) +
geom_col(aes(x = x3_offset,y = DeltaIndex, fill = "DeltaIndex"), width = 0.4,
color = "black", size = 0.5) +
# 白底，没有上边框和右边框
theme_classic() +
# 设置坐标轴上字体大小
theme(axis.text.x = element_text(size = 42, color = "black")) +
theme(axis.text.y = element_text(size = 42, color = "black")) +
# 设置字体样式
theme(text = element_text(family = "Arial")) +
# 设置label字体大小
theme(axis.title.x = element_text(size = 45)) +
theme(axis.title.y = element_text(size = 38)) +
# 设置label内容
labs(y = "Index Overhead (%)", x = NULL) +
# ylabel位置
theme(axis.title.y = element_text(hjust = 1)) +
# 隐藏x轴label
theme(axis.title.x = element_blank()) +
# 设置刻度内容及位置
scale_x_continuous(breaks = x2_offset,
labels = c("Linux", "Web", "Docker", "SimOS")) +
scale_y_continuous(breaks = c(0, 0.2, 0.4, 0.6),
labels = c(0, 0.2, 0.4, 0.6)) +
# 设置文本，hjust和vjust设置对齐基准点
geom_text(aes(x = x1_offset, y = FingerprintIndex), hjust = 0,
vjust = 0.5, label=FingerprintIndex, angle = 90, size = 12, nudge_y = 0.008) +
geom_text(aes(x = x2_offset, y = FeatureIndex), hjust = 0,
vjust = 0.5, label=FeatureIndex, angle = 90, size = 12, nudge_y = 0.008) +
geom_text(aes(x = x3_offset, y = DeltaIndex), hjust = 0,
vjust = 0.5, label=DeltaIndex, angle = 90, size = 12, nudge_y = 0.008) +
# 图例
scale_fill_manual(name=NULL,
values=c("FingerprintIndex" = "#AD0626",
"FeatureIndex" = "#B79AD1",
"DeltaIndex" = "#F2BE5C"),
limits=c("FingerprintIndex",
"FeatureIndex",
"DeltaIndex")) +
# 图例位置
theme(legend.position = c(0.5, 0.92)) +
# 图例背景设置为空
theme(legend.background = element_rect(fill = "transparent")) +
# 图例大小
theme(legend.text = element_text(size = 36)) +
# 图例每行元素个数
guides(fill=guide_legend(ncol = 3, #根据ncol或者nrow设置图例显示行数或列数（设置一个即可）
byrow = T))#默认F，表示升序填充，反之则降序
# 保存文件
ggsave(paste(exportPath, exportName, sep=""), plot = last_plot(), width = 12, height = 5)
rm(list = ls())
exp = "exp3"
exportPath = "C:/Users/YangJingyuan/Desktop/"
exportName = "exp3-download.pdf"
root = "D:/RProject/tmp"
setwd(sprintf("%s/%s", root, exp))
library(ggplot2)
library(readxl)
library(extrafont)
library(showtext)
font_add('Arial','C:/Windows/Fonts/arial.ttf')
showtext_auto()
UniqueThroughput = c(411.2608358,	694.8722129,	834.368372,
885.2039967,	876.9824063,	872.7960798,
876.8007488,	871.0097504,	883.7736059,
890.4331953,	862.0108768,	849.0209848,
878.1633746,	882.4890648)
TreeThroughput = c(752.3921653,	1160.490758,	1214.744795,
1246.960372,	1245.307977,	1237.486132,
1189.280416,	1159.265632,	1155.884476,
1168.231146,	1152.125655,	1118.334624,
1106.864507,	1069.537178)
#x轴数据
xline <- numeric(14)
for (i in 1:14){
xline[i] = i
}
# 设置字体
windowsFonts(Arial=windowsFont("Arial"))
#绘图
ggplot() +
# 坐标轴显示范围
coord_cartesian(xlim =c(1.2, 14), ylim = c(0, 1450)) +
# 折线
geom_line(aes(x=xline,y=TreeThroughput), color="#AD0626", size=3) +
geom_line(aes(x=xline,y=UniqueThroughput), color="#2C3359", size=3) +
# 散点
geom_point(aes(x=xline,y=TreeThroughput), color = "#AD0626",
size = 12) +
geom_point(aes(x=xline,y=UniqueThroughput), color = "#2C3359",
size = 14, shape = "X") +
# 白底，没有上边框和右边框
theme_classic() +
# 设置坐标轴上字体大小
theme(axis.text = element_text(size = 42, color = "black")) +
# 设置字体样式
theme(text = element_text(family = "Arial")) +
# 设置label字体大小
theme(axis.title.x = element_text(size = 48)) +
theme(axis.title.y = element_text(size = 41)) +
# 设置label内容
labs(y = "Download (MiB/s)", x = "Number of clients") +
# ylabel位置
theme(axis.title.y = element_text(hjust = 1.1)) +
# 设置刻度内容及位置
scale_x_continuous(breaks = c(1, 5, 10, 14),
labels = c(1, 5, 10, 14)) +
scale_y_continuous(breaks = c(0, 700, 1400),
labels = c(0, 700, 1400))
# 保存文件
ggsave(paste(exportPath, exportName, sep=""), plot = last_plot(), width = 10, height = 5)
rm(list = ls())
exp = "exp3"
exportPath = "C:/Users/YangJingyuan/Desktop/"
exportName = "exp3-upload.pdf"
root = "D:/RProject/tmp"
setwd(sprintf("%s/%s", root, exp))
library(ggplot2)
library(readxl)
library(extrafont)
library(showtext)
font_add('Arial','C:/Windows/Fonts/arial.ttf')
showtext_auto()
TreeThroughput = c(298.2973093,	578.1948956,	768.9988574,
859.0624296,	894.0806686,	920.6089242,
930.9182792,	934.8045036,	907.627852,
908.5585707,	911.2134015,	912.4279238,
923.8718925,	919.5351354)
UniqueThroughput = c(76.5387131,	146.2803803,	184.7399786,
207.7408522,	193.8038597,	197.8772703,
191.1004127,	189.4179879,	206.1617464,
185.9333436,	185.6470947,	188.5068488,
188.2387158,	187.0547541)
#x轴数据
xline <- numeric(14)
for (i in 1:14){
xline[i] = i
}
# 设置字体
windowsFonts(Arial=windowsFont("Arial"))
#绘图
ggplot() +
# 坐标轴显示范围
coord_cartesian(xlim =c(1.2, 14), ylim = c(0, 1050)) +
# 折线
geom_line(aes(x=xline,y=TreeThroughput), color="#AD0626", size=3) +
geom_line(aes(x=xline,y=UniqueThroughput), color="#2C3359", size=3) +
# 散点
geom_point(aes(x=xline,y=TreeThroughput), color = "#AD0626",
size = 12) +
geom_point(aes(x=xline,y=UniqueThroughput), color = "#2C3359",
size = 14, shape = "X") +
# 白底，没有上边框和右边框
theme_classic() +
# 设置坐标轴上字体大小
theme(axis.text = element_text(size = 42, color = "black")) +
# 设置字体样式
theme(text = element_text(family = "Arial")) +
# 设置label字体大小
theme(axis.title.x = element_text(size = 48)) +
theme(axis.title.y = element_text(size = 45)) +
# 设置label内容
labs(y = "Upload (MiB/s)", x = "Number of clients") +
# ylabel位置
theme(axis.title.y = element_text(hjust = 1.2)) +
# 设置刻度内容及位置
scale_x_continuous(breaks = c(1, 5, 10, 14),
labels = c(1, 5, 10, 14)) +
scale_y_continuous(breaks = c(0, 500, 1000),
labels = c(0, 500, 1000))
# 保存文件
ggsave(paste(exportPath, exportName, sep=""), plot = last_plot(), width = 10, height = 5)
